Step 2: Installing Minikube

# https://minikube.sigs.k8s.io/docs/start/


1. Download the Minikube binary package using the wget command:

wget https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64


hen, use the chmod command to give the file executive permission:

chmod +x minikube-linux-amd64

3. Finally, move the file to the /usr/local/bin directory:

sudo mv minikube-linux-amd64 /usr/local/bin/minikube

4. With that, you have finished setting up Minikube. Verify the installation by checking the version of the software:

minikube version

Step 3: Installing Kubectl

Apart from installing Minikube, you also need to set up kubectl, the command line tool for working with Kubernetes.

1. Run the following command to download kubectl:

curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl

2. Give it executive permission:

chmod +x kubectl

3. Move it to the same directory where you previously stored Minikube:

sudo mv kubectl  /usr/local/bin/

4. Verify the installation by running:

kubectl version --client -o json

5. Add passwordless sudo for podman/docker

sudo echo "$USER ALL=(ALL) NOPASSWD: /usr/bin/podman" /etc/sudoers.d/$USERminikube version



minikube start
# minikube stop
# minikube delete 

minikube status 


LVM_ROOT=$HOME/workspace/lvm

mkdir $LVM_ROOT/var/rabbitmq
mkdir $LVM_ROOT/var/data && chmod 777 $LVM_ROOT/var/data
mkdir $LVM_ROOT/var/jupyter && chmod 777 $LVM_ROOT/var/jupyter

minikube config set driver podman
minikube config set container-runtime cri-o

minikube start --mount --mount-string="$LVM_ROOT:/lvm" --container-runtime=cri-o --extra-config=kubelet.housekeeping-interval=10s

#--memory 4096 --cpus 2 --network=host

#https://robotics.stackexchange.com/questions/15745/how-can-i-receive-genicam-packets-from-a-device-in-a-docker-container

minikube addons list
minikube addons enable metrics-server
minikube addons enable dashboard
minikube addons list


minikube ip
minikube dashboard --url&
kubectl proxy&
# kubectl proxy --address='0.0.0.0'&

# http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/#/pod?namespace=default

kubectl create -f config/kube/rabbitmq.yaml

kubectl create -f config/kube/lvm_moe-sim.yaml 
kubectl create -f config/kube/lvm_scraper.yaml

kubectl create -f config/kube/lvm_sci_pwi-sim.yaml
kubectl create -f config/kube/lvm_skyw_pwi-sim.yaml
kubectl create -f config/kube/lvm_skye_pwi-sim.yaml
kubectl create -f config/kube/lvm_spec_pwi-sim.yaml

vncviewer $(minikube ip):1
vncviewer $(minikube ip):2
vncviewer $(minikube ip):3
vncviewer $(minikube ip):4

kubectl create -f config/kube/lvm_sci_agcam-sim.yaml
kubectl create -f config/kube/lvm_skyw_agcam-sim.yaml
kubectl create -f config/kube/lvm_skye_agcam-sim.yaml
kubectl create -f config/kube/lvm_spec_agcam-sim.yaml

niceQUI --MOE.CONFIG:Endpoint=[NAME=lvm.moe-sim,HOST=$(minikube ip),PORT=40000]+UI=$LVM_ROOT/lvmtan/config/lvm/lvm.all.ui 
python3.9 $LVM_ROOT/wasndas/lvmcam/utils/simple_camui.py -c lvm.sci.agcam -k lvm.sci.km -t lvm.sci.pwi -H $(minikube ip)


kubectl delete -n default pod lvm_moe-sim&

kubectl delete -n default pod lvm-sci-pwi-sim&
kubectl delete -n default pod lvm-skyw-pwi-sim&
kubectl delete -n default pod lvm-skye-pwi-sim&
kubectl delete -n default pod lvm-spec-pwi-sim&

kubectl delete -n default pod lvm-sci-agcam-sim&
kubectl delete -n default pod lvm-skyw-agcam-sim&
kubectl delete -n default pod lvm-skye-agcam-sim&
kubectl delete -n default pod lvm-spec-agcam-sim&


ip route add 10.96.0.0/12 via $(minikube ip) # svc
ip route add 172.17.0.0/16 via $(minikube ip) # pods

kubectl create -f config/kube/kube-flannel.yml
kubectl apply -f /usr/share/k8s-yaml/multus/multus.yaml

sudo podman exec -ti minikube bash -l

kubectl get pod,svc -n default
kubectl create -f config/kube/lvm_sci_pwi-sim.yaml
kubectl exec lvm-sci-pwi-sim -- capsh --print

# https://github.com/flannel-io/flannel/blob/master/Documentation/kube-flannel.yml
kubectl get psp
kubectl create -f config/kube/lvm_sci_pwi-sim.yaml


